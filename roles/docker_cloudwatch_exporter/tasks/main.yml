- name: Install dependencies
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - curl
    - docker

- name: Enable Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Get latest Docker Compose version from GitHub
  uri:
    url: https://api.github.com/repos/docker/compose/releases/latest
    return_content: yes
  register: docker_compose_latest_release

- name: Set Docker Compose version
  set_fact:
    docker_compose_version: "{{ docker_compose_latest_release.json.tag_name }}"

- name: Install latest docker-compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
    dest: /usr/local/bin/docker-compose
    mode: "u+x,g+x"

- name: Create docker group if not present
  ansible.builtin.group:
    name: docker
    state: present

- name: Add ec2-user to docker group
  user:
    name: ec2-user
    groups: docker
    append: yes

- name: Gather EC2 metadata
  ec2_metadata_facts:

- name: Copy CloudWatch Exporter config file with dynamic region
  template:
    src: cloudwatch-exporter.yaml.j2
    dest: /home/ec2-user/cloudwatch-exporter.yaml

- name: Run CloudWatch Exporter container
  docker_container:
    name: cloudwatch_exporter
    image: prom/cloudwatch-exporter
    ports:
      - "9106:9106"
    volumes:
      - "/home/ec2-user/cloudwatch-exporter.yaml:/config/config.yml"
    state: started
    restart_policy: always
